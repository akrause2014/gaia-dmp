#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Create a new deployment using the new data share.

    Result:

        Work in progress ...


# -----------------------------------------------------
# Modified the datashares config to only contain the new DR3 data set.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE:?}"

        gedit deployments/common/manila/datashares.yaml

    popd

    >   ....
    >     - id: "GDR3"
    >       cloudname: "iris-gaia-data"
    >       sharename: "aglais-data-gaia-dr3-2048-new"
    >       mountpath: "/data/gaia/GDR3"
    >       checksums:
    >         - path:   GDR3_ASTROPHYSICAL_PARAMETERS
    >           count:  2049
    >           #md5sum: 27ef862b779049eafbc6764f57262eb8
    >   ....


# -----------------------------------------------------
# Check which cloud is currently live.
#[user@desktop]

    ssh fedora@live.gaia-dmp.uk \
        '
        date
        hostname
        '

    >   Tue 22 Nov 09:03:10 UTC 2022
    >   iris-gaia-blue-20221013-zeppelin


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    #
    # Live is blue, selecting green for the deployment.
    #

    source "${HOME:?}/aglais.env"

    agcolour=green
    configname=zeppelin-54.86-spark-6.26.43

    agproxymap=3000:3000
    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --publish  "${agproxymap:?}" \
        --env "cloudname=${cloudname:?}" \
        --env "configname=${configname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

    >   aglais:
    >     status:
    >       deployment:
    >         type: hadoop-yarn
    >         conf: zeppelin-54.86-spark-6.26.43
    >         name: iris-gaia-green-20221122
    >         date: 20221122T090837
    >         hostname: zeppelin.gaia-dmp.uk
    >     spec:
    >       openstack:
    >         cloud:
    >           base: arcus
    >           name: iris-gaia-green
    >   
    >   real	35m22.384s
    >   user	12m1.412s
    >   sys	2m39.672s


# -----------------------------------------------------
# Allow port 8080 (HTTP).
#[root@ansibler]

    groupid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            security group list \
                --format json \
        | jq -r '.[] | select(.Name | match("zeppelin-security")) | .ID'
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        security group rule create \
            --ingress \
            --protocol 'tcp' \
            --dst-port '8080:8080' \
            "${groupid}"

    >   +-------------------------+--------------------------------------+
    >   | Field                   | Value                                |
    >   +-------------------------+--------------------------------------+
    >   | created_at              | 2022-11-22T09:47:57Z                 |
    >   | description             |                                      |
    >   | direction               | ingress                              |
    >   | ether_type              | IPv4                                 |
    >   | id                      | d11ddecd-444e-4ebb-a54a-d8d933f4ac61 |
    >   | name                    | None                                 |
    >   | port_range_max          | 8080                                 |
    >   | port_range_min          | 8080                                 |
    >   | project_id              | de5ddc6b4d1e445bb73e45c7b8971673     |
    >   | protocol                | tcp                                  |
    >   | remote_address_group_id | None                                 |
    >   | remote_group_id         | None                                 |
    >   | remote_ip_prefix        | 0.0.0.0/0                            |
    >   | revision_number         | 0                                    |
    >   | security_group_id       | 61b4fab6-393f-445b-b673-0717edc46315 |
    >   | tags                    | []                                   |
    >   | tenant_id               | de5ddc6b4d1e445bb73e45c7b8971673     |
    >   | updated_at              | 2022-11-22T09:47:57Z                 |
    >   +-------------------------+--------------------------------------+






# -----------------------------------------------------
# -----------------------------------------------------
# -----------------------------------------------------
# -----------------------------------------------------
# -----------------------------------------------------



    Install a local version of gaiadmpsetup

# -----------------------------------------------------
# Edit local version of gaiadmpsetup to use Nigel's data.
#[root@ansibler]

    ssh zeppelin

        vi "${HOME}/gaiadmpsetup/gaiadmpsetup/gaiadmpstore.py"

        -   data_store = "file:////data/gaia/"
        +   data_store = "file:////user/NHambly/PARQUET/"


        vi "${HOME}/gaiadmpsetup/gaiadmpsetup/gaiadr3_pyspark_schema_structures.py"

        -   release_folder = 'GDR3_2048_NEW'
        +   release_folder = 'GDR3'


        rm -r 'gaiadmpsetup/gaiadmpsetup/__pycache__'

        zeppelin-daemon.sh restart



# -----------------------------------------------------

    Create a test user

# -----------------------------------------------------
# Login as the new user.
#[root@ansibler]

    password=$(
        jq -r '.shirouser.password' "/tmp/${username}.json"
        )

    zeppelinurl=http://zeppelin:8080
    zepcookies=/tmp/${username:?}.cookies

    curl \
        --silent \
        --request 'POST' \
        --cookie-jar "${zepcookies:?}" \
        --data "userName=${username:?}" \
        --data "password=${password:?}" \
        "${zeppelinurl:?}/api/login" \
    | jq '.'


    >   ....
    >   ....


# -----------------------------------------------------
# List notebooks the user can see.
#[root@ansibler]

    curl \
        --silent \
        --cookie "${zepcookies:?}" \
        "${zeppelinurl:?}/api/notebook" \
    | jq '.'

    >   ....
    >   ....


# -----------------------------------------------------
# Run the source counts example.
#[root@ansibler]

    source /deployments/zeppelin/bin/zeppelin-rest-tools.sh

    testall \
        "${username}" \
        "${password}" \
        "/Users/${username}/examples/3" \
    | tee "/tmp/${username}-testone.json" \
    | jq '
       .notebooks[] | {
            "id": .noteid,
            "name": .execute.name,
            "path": .execute.path,
            "duration": .execute.duration,
            "paragraphs": [
                .execute.paragraphs[] | {
                    "title": .title,
                    "duration": .duration
                    }
                ]
            }
       '

    >   ....
    >   ....


# -----------------------------------------------------
# Run the proper motions example.
#[root@ansibler]

    source /deployments/zeppelin/bin/zeppelin-rest-tools.sh

    testall \
        "${username}" \
        "${password}" \
        "/Users/${username}/examples/4" \
    | tee "/tmp/${username}-testone.json" \
    | jq '
       .notebooks[] | {
            "id": .noteid,
            "name": .execute.name,
            "path": .execute.path,
            "duration": .execute.duration,
            "paragraphs": [
                .execute.paragraphs[] | {
                    "title": .title,
                    "duration": .duration
                    }
                ]
            }
       '

    >   ....
    >   ....


# -----------------------------------------------------
# Run the ML RandomForest classifier example.
#[root@ansibler]

    source /deployments/zeppelin/bin/zeppelin-rest-tools.sh

    testall \
        "${username}" \
        "${password}" \
        "/Users/${username}/examples/7" \
    | tee "/tmp/${username}-testone.json" \
    | jq '
       .notebooks[] | {
            "id": .noteid,
            "name": .execute.name,
            "path": .execute.path,
            "duration": .execute.duration,
            "paragraphs": [
                .execute.paragraphs[] | {
                    "title": .title,
                    "duration": .duration
                    }
                ]
            }
       '

    >   ....
    >   ....


