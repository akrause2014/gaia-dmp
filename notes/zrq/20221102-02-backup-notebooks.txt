#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Backup the notebooks from the live server.
        ** This should be implemented as a cron job on our data node.

    Result:

        Work in progress ...

# -----------------------------------------------------
# Login to our data node.
#[user@desktop]

    ssh fedora@data.gaia-dmp.uk


# -----------------------------------------------------
# Backup the current notebooks.
#[fedora@data]

        sshuser=fedora
        sshhost=live.gaia-dmp.uk

        ssh-keyscan "${sshhost:?}" 2>/dev/null >> "${HOME}/.ssh/known_hosts"

        pushd /var/local/backups
            pushd notebooks

                datetime=$(date '+%Y%m%d-%H%M%S')
                backname="${datetime:?}-${sshhost:?}-notebooks"

                mkdir "${backname}"

                rsync \
                    --perms \
                    --times \
                    --group \
                    --owner \
                    --stats \
                    --progress \
                    --exclude '~Trash' \
                    --human-readable \
                    --checksum \
                    --recursive \
                    --rsync-path 'sudo rsync' \
                    "${sshuser:?}@${sshhost:?}:/home/fedora/zeppelin/notebook" \
                    "${backname:?}"

                rsync \
                    --perms \
                    --times \
                    --group \
                    --owner \
                    --stats \
                    --progress \
                    --human-readable \
                    --checksum \
                    --recursive \
                    --rsync-path 'sudo rsync' \
                    "${sshuser:?}@${sshhost:?}:/home/fedora/zeppelin/conf/notebook-authorization.json" \
                    "${backname:?}"

                if [ -L latest ]
                then
                    rm latest
                fi
                ln -s "${backname:?}" latest

            popd
        popd

        ls -al /var/local/backups/notebooks/

    >   ....
    >   ....
    >   drwxrwxr-x.  3 fedora fedora 4096 Oct 17 01:22 20221017-012243-live-notebooks
    >   drwxrwxr-x.  3 fedora fedora 4096 Oct 17 01:23 20221017-012310-edit-notebooks
    >   drwxrwxr-x.  3 fedora fedora 4096 Nov  2 05:04 20221102-050416-live.gaia-dmp.uk-notebooks
    >   drwxrwxr-x.  6 fedora fedora 4096 Jul 27 10:43 attic
    >   lrwxrwxrwx.  1 fedora fedora   42 Nov  2 05:04 latest -> 20221102-050416-live.gaia-dmp.uk-notebooks

        du -h -d 3 /var/local/backups/notebooks/latest/

    >   3.7M    /var/local/backups/notebooks/latest/notebook/Users/SBertocco
    >   3.7M    /var/local/backups/notebooks/latest/notebook/Users/JSwinbank
    >   46M     /var/local/backups/notebooks/latest/notebook/Users/DCrake
    >   3.1M    /var/local/backups/notebooks/latest/notebook/Users/AZijlstra
    >   14M     /var/local/backups/notebooks/latest/notebook/Users/NHambly
    >   3.6M    /var/local/backups/notebooks/latest/notebook/Users/SGoughKelly
    >   3.0M    /var/local/backups/notebooks/latest/notebook/Users/SVoutsinas
    >   3.0M    /var/local/backups/notebooks/latest/notebook/Users/MSemczuk
    >   3.7M    /var/local/backups/notebooks/latest/notebook/Users/GHughes
    >   3.5M    /var/local/backups/notebooks/latest/notebook/Users/Oor7cheitoiz8Fie
    >   3.7M    /var/local/backups/notebooks/latest/notebook/Users/FLykou
    >   3.7M    /var/local/backups/notebooks/latest/notebook/Users/DMorris
    >   94M     /var/local/backups/notebooks/latest/notebook/Users
    >   12M     /var/local/backups/notebooks/latest/notebook/.git/objects
    >   16K     /var/local/backups/notebooks/latest/notebook/.git/refs
    >   4.0K    /var/local/backups/notebooks/latest/notebook/.git/branches
    >   28K     /var/local/backups/notebooks/latest/notebook/.git/logs
    >   4.0K    /var/local/backups/notebooks/latest/notebook/.git/hooks
    >   12M     /var/local/backups/notebooks/latest/notebook/.git
    >   106M    /var/local/backups/notebooks/latest/notebook
    >   106M    /var/local/backups/notebooks/latest/
    >   ....
    >   ....


    #
    # Looks like a test user managed to get their notes saved ..
    # Probabluy part of the final testing for the deployment.
    #

    >   ....
    >   3.5M    /var/local/backups/notebooks/latest/notebook/Users/Oor7cheitoiz8Fie
    >   ....


    #
    # Need to flag that as a test user and delete it.
    # Otherwise we will accumulare more and more over time.
    #


    #
    # TODO Prefix the test username with 'test-'.
    # TODO Tidy up the test account when we make the deployment.
    #

# -----------------------------------------------------
# Delete the test user's notebook.
#[fedora@data]

    #
    # Deleting the test user's directory saves space.

    pushd /var/local/backups/notebooks/latest/

        rm -r notebook/Users/Oor7cheitoiz8Fie

    #
    # ... but that still leaves the orphanned entries in the notebook-authorization.json file.

    cp notebook-authorization.json notebook-authorization.bak


    jq '.' notebook-authorization.json

    >   {
    >     "authInfo": {
    >       "2HB4V7B17": {
    >         "readers": [
    >           "NHambly"
    >         ],
    >         "owners": [
    >           "NHambly"
    >         ],
    >         "writers": [
    >           "NHambly"
    >         ],
    >         "runners": [
    >           "NHambly"
    >         ]
    >       },
    >       ....
    >       ....
    >       "2HFNEMWRP": {
    >         "readers": [
    >           "Oor7cheitoiz8Fie"
    >         ],
    >         "owners": [
    >           "Oor7cheitoiz8Fie"
    >         ],
    >         "writers": [
    >           "Oor7cheitoiz8Fie"
    >         ],
    >         "runners": [
    >           "Oor7cheitoiz8Fie"
    >         ]
    >       }
    >     }


    #
    # Split the entries into key:value pairs.
    #

    jq '.authInfo | to_entries' notebook-authorization.json

    >   [
    >     ....
    >     ....
    >     {
    >       "key": "2HA73248E",
    >       "value": {
    >         "readers": [
    >           "FLykou"
    >         ],
    >         "owners": [
    >           "FLykou"
    >         ],
    >         "writers": [
    >           "FLykou"
    >         ],
    >         "runners": [
    >           "FLykou"
    >         ]
    >       }
    >     },
    >     {
    >       "key": "2HFNEMWRP",
    >       "value": {
    >         "readers": [
    >           "Oor7cheitoiz8Fie"
    >         ],
    >         "owners": [
    >           "Oor7cheitoiz8Fie"
    >         ],
    >         "writers": [
    >           "Oor7cheitoiz8Fie"
    >         ],
    >         "runners": [
    >           "Oor7cheitoiz8Fie"
    >         ]
    >       }
    >     }
    >   ]


    jq '.authInfo | to_entries | .[] | select(.value.readers[] | contains("Oor7cheitoiz8Fie"))' notebook-authorization.json

    >   {
    >     "key": "2HHFGQ6FM",
    >     "value": {
    >       "readers": [
    >         "Oor7cheitoiz8Fie"
    >       ],
    >       "owners": [
    >         "Oor7cheitoiz8Fie"
    >       ],
    >       "writers": [
    >         "Oor7cheitoiz8Fie"
    >       ],
    >       "runners": [
    >         "Oor7cheitoiz8Fie"
    >       ]
    >     }
    >   }
    >   ....
    >   ....
    >   {
    >     "key": "2HFNEMWRP",
    >     "value": {
    >       "readers": [
    >         "Oor7cheitoiz8Fie"
    >       ],
    >       "owners": [
    >         "Oor7cheitoiz8Fie"
    >       ],
    >       "writers": [
    >         "Oor7cheitoiz8Fie"
    >       ],
    >       "runners": [
    >         "Oor7cheitoiz8Fie"
    >       ]
    >     }
    >   }

    #
    # If we assume the reader, writer and runner arrays only have a single value,
    # and we assume that the reader, writer and runner arrays are the same,
    # then we can select the notebooks that include the target username in the readers array.
    #

    jq '.authInfo | to_entries | .[] | select(.value.readers[] | contains("Oor7cheitoiz8Fie")) | .key' notebook-authorization.json

    >   "2HHFGQ6FM"
    >   "2HG5CNDNV"
    >   "2HJ4RY318"
    >   "2HF9WJ4DK"
    >   "2HHV1FDJK"
    >   "2HGZQAAMH"
    >   "2HG9F8D3S"
    >   "2HFNEMWRP"

    #
    # Or we can select the ones that don't contain the target username.
    #

    jq '.authInfo | to_entries | [ .[] | select(.value.readers[] | contains("Oor7cheitoiz8Fie") | not) ]' notebook-authorization.json

    >   [
    >     {
    >       "key": "2HB4V7B17",
    >       "value": {
    >         "readers": [
    >           "NHambly"
    >         ],
    >         "owners": [
    >           "NHambly"
    >         ],
    >         "writers": [
    >           "NHambly"
    >         ],
    >         "runners": [
    >           "NHambly"
    >         ]
    >       }
    >     },
    >     ....
    >     ....
    >     {
    >       "key": "2HA73248E",
    >       "value": {
    >         "readers": [
    >           "FLykou"
    >         ],
    >         "owners": [
    >           "FLykou"
    >         ],
    >         "writers": [
    >           "FLykou"
    >         ],
    >         "runners": [
    >           "FLykou"
    >         ]
    >       }
    >     }
    >   ]


    #
    # Or we can delete the ones that do contain the target username.
    # https://www.krenger.ch/blog/jq-delete-an-element-from-an-array/
    #

    jq '.authInfo | to_entries | del(.[] | select(.value.readers[] | contains("Oor7cheitoiz8Fie")))' notebook-authorization.json

    >   [
    >     {
    >       "key": "2HB4V7B17",
    >       "value": {
    >         "readers": [
    >           "NHambly"
    >         ],
    >         "owners": [
    >           "NHambly"
    >         ],
    >         "writers": [
    >           "NHambly"
    >         ],
    >         "runners": [
    >           "NHambly"
    >         ]
    >       }
    >     },
    >     ....
    >     ....
    >     {
    >       "key": "2HA73248E",
    >       "value": {
    >         "readers": [
    >           "FLykou"
    >         ],
    >         "owners": [
    >           "FLykou"
    >         ],
    >         "writers": [
    >           "FLykou"
    >         ],
    >         "runners": [
    >           "FLykou"
    >         ]
    >       }
    >     }
    >   ]


    #
    # Then convert the key:value pairs back into elements.
    #

    jq '.authInfo | to_entries | del(.[] | select(.value.readers[] | contains("Oor7cheitoiz8Fie"))) | from_entries' notebook-authorization.json

    >   {
    >     "2HB4V7B17": {
    >       "readers": [
    >         "NHambly"
    >       ],
    >       "owners": [
    >         "NHambly"
    >       ],
    >       "writers": [
    >         "NHambly"
    >       ],
    >       "runners": [
    >         "NHambly"
    >       ]
    >     },
    >     ....
    >     ....
    >     "2HA73248E": {
    >       "readers": [
    >         "FLykou"
    >       ],
    >       "owners": [
    >         "FLykou"
    >       ],
    >       "writers": [
    >         "FLykou"
    >       ],
    >       "runners": [
    >         "FLykou"
    >       ]
    >     }
    >   }


    #
    # and wrap it all in a top level authInfo element
    #

    jq '{ authInfo: (.authInfo | to_entries | del(.[] | select(.value.readers[] | contains("Oor7cheitoiz8Fie"))) | from_entries) }' notebook-authorization.json

    >   {
    >     "authInfo": {
    >       "2HB4V7B17": {
    >         "readers": [
    >           "NHambly"
    >         ],
    >         "owners": [
    >           "NHambly"
    >         ],
    >         "writers": [
    >           "NHambly"
    >         ],
    >         "runners": [
    >           "NHambly"
    >         ]
    >       },
    >       ....
    >       ....
    >       "2HA73248E": {
    >         "readers": [
    >           "FLykou"
    >         ],
    >         "owners": [
    >           "FLykou"
    >         ],
    >         "writers": [
    >           "FLykou"
    >         ],
    >         "runners": [
    >           "FLykou"
    >         ]
    >       }
    >     }
    >   }


    #
    # and finally compare it with the original
    #

    jq '{ authInfo: (.authInfo | to_entries | del(.[] | select(.value.readers[] | contains("Oor7cheitoiz8Fie"))) | from_entries) }' notebook-authorization.json | tee notebook-authorization.new

    diff notebook-authorization.bak \
         notebook-authorization.new

    >   87,100d86
    >   <     "2HHFGQ6FM": {
    >   <       "readers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "owners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "writers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "runners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ]
    >   <     },
    >   589,602d574
    >   <     "2HG5CNDNV": {
    >   <       "readers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "owners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "writers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "runners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ]
    >   <     },
    >   841,854d812
    >   <     "2HJ4RY318": {
    >   <       "readers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "owners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "writers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "runners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ]
    >   <     },
    >   1720,1733d1677
    >   <     "2HF9WJ4DK": {
    >   <       "readers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "owners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "writers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "runners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ]
    >   <     },
    >   1762,1775d1705
    >   <     "2HHV1FDJK": {
    >   <       "readers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "owners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "writers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "runners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ]
    >   <     },
    >   1894,1907d1823
    >   <     "2HGZQAAMH": {
    >   <       "readers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "owners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "writers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "runners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ]
    >   <     },
    >   2202,2215d2117
    >   <     "2HG9F8D3S": {
    >   <       "readers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "owners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "writers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "runners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ]
    >   <     },
    >   2355,2368d2256
    >   <     },
    >   <     "2HFNEMWRP": {
    >   <       "readers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "owners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "writers": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ],
    >   <       "runners": [
    >   <         "Oor7cheitoiz8Fie"
    >   <       ]
    >   2371c2259
    >   < }
    >   \ No newline at end of file
    >   ---
    >   > }

    #
    # Which is what we wanted :-)
    #

    rm notebook-authorization.json
    mv notebook-authorization.new \
       notebook-authorization.json


    #
    # Note - while editing this I noticed that there are some entries that have no readers, writers, or runners.
    #

    jq '.' notebook-authorization.json

    >       ....
    >       "2GQDKZ59J": {
    >         "readers": [],
    >         "owners": [],
    >         "writers": [],
    >         "runners": []
    >       },
    >       ....


    #
    # I checked and these were in the original, so not a side effect of this work.
    # Leave them in place for now.
    # Log an issue and come back later ..
    # https://github.com/wfau/gaia-dmp/issues/1046
    #


# -----------------------------------------------------
# Move backups from July and August into attic and then delete them.
#[fedora@data]

    pushd /var/local/backups/notebooks

        find . -name '202207*' | sort

    popd

    >   ./20220711-115325-green-notebooks
    >   ./20220711-120205-blue-notebooks
    >   ./20220714-182621-blue-notebooks
    >   ./20220714-182708-green-notebooks
    >   ./20220722-033145-green-notebooks
    >   ./20220722-033450-blue-notebooks
    >   ./20220727-103914-blue-notebooks
    >   ./20220727-181710-green-notebooks
    >   ./20220727-new-start
    >   ./20220728-094954-green-notebooks
    >   ./20220728-171938-green-notebooks
    >   ./20220728-172348-green-notebooks
    >   ./20220729-045808-red-notebooks
    >   ./20220729-052527-red-notebooks
    >   ./20220729-182011-red-notebooks


    pushd /var/local/backups/notebooks

        mkdir -p attic

        find .  -maxdepth 1 -name '202207*' -exec mv '{}' attic/ \;
        find .  -maxdepth 1 -name '202208*' -exec mv '{}' attic/ \;

        rm -rf attic

    popd

    du -h -d 1 .

    >   107M    ./20221017-012243-live-notebooks
    >   103M    ./20221013-151552-live-notebooks
    >   93M     ./20220906-151603-live-notebooks
    >   102M    ./20220922-190524-live-notebooks
    >   99M     ./20220922-191009-edit-notebooks
    >   99M     ./20221013-151634-edit-notebooks
    >   103M    ./20221102-050416-live.gaia-dmp.uk-notebooks
    >   103M    ./20221011-085755-live-notebooks
    >   102M    ./20220919-162847-live-notebooks
    >   99M     ./20221011-085820-edit-notebooks
    >   103M    ./20221017-012310-edit-notebooks
    >   103M    ./20221011-053152-live-notebooks
    >   1.2G	.


# -----------------------------------------------------
# Make a remote (offsite) backup.
#[user@desktop]

    sshuser=fedora
    sshhost=data.gaia-dmp.uk

    pushd /var/local/backups/aglais

        rsync \
            --times \
            --stats \
            --progress \
            --human-readable \
            --checksum \
            --recursive \
            "${sshuser:?}@${sshhost:?}:/var/local/backups/notebooks/" \
            "notebooks"

    popd

    >   ....
    >   ....
    >   Number of files: 3,591 (reg: 2,527, dir: 1,063, link: 1)
    >   Number of created files: 3,590 (reg: 2,527, dir: 1,063)
    >   Number of deleted files: 0
    >   Number of regular files transferred: 2,527
    >   Total file size: 1.26G bytes
    >   Total transferred file size: 1.26G bytes
    >   Literal data: 1.26G bytes
    >   Matched data: 0 bytes
    >   File list size: 556.33K
    >   File list generation time: 0.001 seconds
    >   File list transfer time: 0.000 seconds
    >   Total bytes sent: 53.68K
    >   Total bytes received: 1.26G
    >   
    >   sent 53.68K bytes  received 1.26G bytes  11.71M bytes/sec
    >   total size is 1.26G  speedup is 1.00




