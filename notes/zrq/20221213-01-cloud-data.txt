#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Success

    Result:

        Work in progress ...

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "s3-client" \
        --hostname "s3-client" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# Install the secrets function.
#[root@s3-client]

    datahostname='data.gaia-dmp.uk'
    datahostuser='fedora'

    getsecret()
        {
        local key=${1:?'key required'}
        ssh -n "${datahostuser:?}@${datahostname:?}" \
            "
            getsecret '${key:?}'
            "
        }

    getsecret 'examples.frog'
    getsecret 'examples.toad'

    >   Green Frog
    >   Brown Toad


# -----------------------------------------------------
# Configure our S3 client.
# https://linux.die.net/man/1/s3cmd
# https://s3tools.org/kb/item14.htm
# https://www.digitalocean.com/docs/spaces/resources/s3cmd/
# https://support.arcticcloud.com/portal/kb/articles/managing-object-storage-using-the-s3cmd-interface
# https://docs.ceph.com/en/latest/radosgw/s3/commons/#bucket-and-host-name
#[root@s3-client]

    s3cmd \
        --configure \
        --host $(getsecret devops.stfc.echo.endpoint) \
        --host-bucket $(getsecret devops.stfc.echo.template) \
        --access_key $(getsecret  devops.stfc.echo.access_key) \
        --secret_key $(getsecret  devops.stfc.echo.secret_key)

    >   ....
    >   ....
    >   Test access with supplied credentials? [Y/n]
    >   Please wait, attempting to list all buckets...
    >   Success. Your access key and secret key worked fine :-)
    >   ....
    >   ....
    >   Save settings? [y/N] y
    >   Configuration saved to '/root/.s3cfg'


# -----------------------------------------------------
# List our buckets.
#[root@s3-client]

    s3cmd ls

    >   2022-11-28 11:35  s3://GaiaDMp-GDR3_2MASSPSC_BEST_NEIGHBOURS
    >   2022-11-28 00:21  s3://GaiaDMp-GDR3_ALERTS_MIXEDIN_SOURCEIDS
    >   ....
    >   ....
    >   2022-11-28 11:16  s3://GaiaDMp-GDR3_XP_SAMPLED_MEAN_SPECTRUM
    >   2022-11-28 11:17  s3://GaiaDMp-GDR3_XP_SUMMARY


# -----------------------------------------------------
# Check the settings on each of our buckets.
#[root@s3-client]

    for bucketurl in $(s3cmd ls | cut -d ' ' -f 4)
    do
        echo ""
        echo "Bucket [${bucketurl}]"

        s3cmd info "${bucketurl}"

    done

    >   Bucket [s3://GaiaDMp-GDR3_2MASSPSC_BEST_NEIGHBOURS]
    >   s3://GaiaDMp-GDR3_2MASSPSC_BEST_NEIGHBOURS/ (bucket):
    >      Location:  us-east-1
    >      Payer:     BucketOwner
    >      Expiration Rule: none
    >      Policy:    none
    >      CORS:      none
    >      ACL:       *anon*: READ
    >      ACL:       aglais-dev: FULL_CONTROL
    >      URL:       http://s3.echo.stfc.ac.uk/GaiaDMp-GDR3_2MASSPSC_BEST_NEIGHBOURS/
    >   
    >   Bucket [s3://GaiaDMp-GDR3_ALERTS_MIXEDIN_SOURCEIDS]
    >   s3://GaiaDMp-GDR3_ALERTS_MIXEDIN_SOURCEIDS/ (bucket):
    >      Location:  us-east-1
    >      Payer:     BucketOwner
    >      Expiration Rule: none
    >      Policy:    none
    >      CORS:      none
    >      ACL:       *anon*: READ
    >      ACL:       aglais-dev: FULL_CONTROL
    >      URL:       http://s3.echo.stfc.ac.uk/GaiaDMp-GDR3_ALERTS_MIXEDIN_SOURCEIDS/
    >   ....
    >   ....
    >   Bucket [s3://GaiaDMp-GDR3_XP_SAMPLED_MEAN_SPECTRUM]
    >   s3://GaiaDMp-GDR3_XP_SAMPLED_MEAN_SPECTRUM/ (bucket):
    >      Location:  us-east-1
    >      Payer:     BucketOwner
    >      Expiration Rule: none
    >      Policy:    none
    >      CORS:      none
    >      ACL:       *anon*: READ
    >      ACL:       aglais-dev: FULL_CONTROL
    >      URL:       http://s3.echo.stfc.ac.uk/GaiaDMp-GDR3_XP_SAMPLED_MEAN_SPECTRUM/
    >   
    >   Bucket [s3://GaiaDMp-GDR3_XP_SUMMARY]
    >   s3://GaiaDMp-GDR3_XP_SUMMARY/ (bucket):
    >      Location:  us-east-1
    >      Payer:     BucketOwner
    >      Expiration Rule: none
    >      Policy:    none
    >      CORS:      none
    >      ACL:       *anon*: READ
    >      ACL:       aglais-dev: FULL_CONTROL
    >      URL:       http://s3.echo.stfc.ac.uk/GaiaDMp-GDR3_XP_SUMMARY/

# -----------------------------------------------------
# Try accessing one of the public URLs.
#[root@s3-client]

    curl \
        --verbose \
        'http://s3.echo.stfc.ac.uk/GaiaDMp-GDR3_XP_SUMMARY/'

    >   *   Trying 130.246.176.245:80...
    >   * Connected to s3.echo.stfc.ac.uk (130.246.176.245) port 80 (#0)
    >   > GET /GaiaDMp-GDR3_XP_SUMMARY/ HTTP/1.1
    >   > Host: s3.echo.stfc.ac.uk
    >   > User-Agent: curl/7.82.0
    >   > Accept: */*
    >   >
    >   * Recv failure: Connection reset by peer
    >   * Closing connection 0
    >   curl: (56) Recv failure: Connection reset by peer








