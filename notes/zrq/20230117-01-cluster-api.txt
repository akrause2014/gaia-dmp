#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Learning how to deploy K8s cluster using cluster API.

    Result:

        Work in progress ...

# -----------------------------------------------------

    Libvirt Cluster-API provider
    https://github.com/openshift/cluster-api-provider-libvirt

    Linode Cluster-API provider
    https://github.com/asauber/cluster-api-provider-linode

    DigitalOcean Cluster-API provider
    https://github.com/kubernetes-sigs/cluster-api-provider-digitalocean

    Openstack Cluster-API provider
    https://github.com/kubernetes-sigs/cluster-api-provider-openstack

    ....

    StackHPC
    https://github.com/stackhpc/capi-helm-charts

        Helm charts for deploying Kubernetes clusters using Cluster API.

        The openstack-cluster chart depends on features in cluster-api-provider-openstack that are not yet in a release.

        StackHPC maintain custom builds of cluster-api-provider-openstack for use with these charts.
        You can find these in the StackHPC fork of cluster-api-provider-openstack.


    Question - how does everyone else use Cluster-API, and why do we need these charts ?

    If we use the StackHPC charts, then we make our deployment Openstack specific :-(
    Port the same configuration to Linode or DigitalOcean to compare ...


# -----------------------------------------------------

    HashiCorp co-founder and CTO Armon Dadgar explains ... the $%^&* obvious.
    https://www.hashicorp.com/resources/what-is-mutable-vs-immutable-infrastructure

# -----------------------------------------------------

    Three separate things, gradually making it more abstract as we go.

    1) Zeppelin/Spark on Kubernetes
    2) Kubernetes on IRIS (Openstack)
    3) Kubernetes on metagrid (libvirt)
    4) Kubernetes on esperia (libvirt)
    5) Kubernetes on commercial (DigitalOcean, Linode, AWS, Azure)

    For (1) we can use the simplest K8 deployment we can get, probably StackHPC.
    For (2) we probably want to start with the StackHPC deploy.
    For (3,4,5) we probably want to make our own charts ?

    For (1) we probably want to add our own charts that depend on the StackHPC charts.
    Adding things like the Manila/CephFS shares and Cinder volumes that we use.

    I think STFC-Cloud (RAL) are using RockyLinux for their primary OS.
    According to Wikipedia, CERN are using AlmaLinux.

# -----------------------------------------------------

    What do we need to do to finish off the cloud-data branch ?
    Or do we just close that branch for now and come back to it with a new branch later ?
    I think cloud-data depends on STFC/RAL fixing the Echo S3 service.
    .. and extending our quota
    .. and then we can upload a new set of data with long form bucket names
    .. and we can start the IVOA note

    Import any changes from laptop (commit, push, pull) and then close the branch.

# -----------------------------------------------------

    Can we deploy the StackHPC charts on the Arcus cloud ?

    What images are available on Arcus ?
    What images are available on Somerville ?

    Can we install our own images ?














