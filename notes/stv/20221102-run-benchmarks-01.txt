#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#


    Target:

        Run the benchmarking tests. (Deploy using deploy.sh this time)

    Result:
  
        Success

# -----------------------------------------------------
# Check which cloud is currently live.
#[user@desktop]

    ssh fedora@live.gaia-dmp.uk \
        '
        date
        hostname
        '

    >   iris-gaia-blue-20221013-zeppelin


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    # Use Red for deploy
    
    source "${HOME:?}/aglais.env"

    agcolour=red
    configname=zeppelin-26.43-spark-3.26.43

    agproxymap=3000:3000
    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --publish  "${agproxymap:?}" \
        --env "cloudname=${cloudname:?}" \
        --env "configname=${configname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

        > 
        
	aglais:
	  status:
	    deployment:
	      type: hadoop-yarn
	      conf: zeppelin-26.43-spark-3.26.43
	      name: iris-gaia-red-20221102
	      date: 20221102T144828
	      hostname: zeppelin.gaia-dmp.uk
	  spec:
	    openstack:
	      cloud:
		base: arcus
		name: iris-gaia-red

	real	62m42.650s
	user	9m36.369s
	sys	1m53.446s
	
	
# -----------------------------------------------------
# Create users    
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    import-test-users

    > Done
   
    
    

# -----------------------------------------------------
# Create our benchmark script.
#[root@ansibler]

cat > /tmp/run-benchmark.py << 'EOF'
#!/bin/python3
import sys
from aglais_benchmark import AglaisBenchmarker

try:

    opts = [opt for opt in sys.argv[1:] if opt.startswith("-")]
    args = [arg for arg in sys.argv[1:] if not arg.startswith("-")]

    endpoint = args[0]
    testconfig = args[1]
    userlist = args[2]
    usercount = int(args[3])
    delaystart = int(args[4])
    delaynotebook = int(args[5])

except IndexError:

    raise SystemExit(f"Usage: {sys.argv[0]} <Zepelin endpoint> <test config> <list of users> <number of users>")

print("{")
print(
"""
\"config\": {{
    \"endpoint\":   \"{}\",
    \"testconfig\": \"{}\",
    \"userlist\":   \"{}\",
    \"usercount\":  \"{}\",
    \"delaystart\":  \"{}\",
    \"delaynotebook\":  \"{}\"
    }},
\"output\":
""".format(
        endpoint,
        testconfig,
        userlist,
        usercount,
        delaystart,
        delaynotebook
        )
    )

print("---start---")
AglaisBenchmarker(
    testconfig,
    userlist,
    "/tmp/",
    endpoint
    ).run(
        concurrent=True,
        users=usercount,
        delay_start=delaystart,
        delay_notebook=delaynotebook
        )
print("---end---")
print("}")
EOF

    chmod 'a+x' /tmp/run-benchmark.py

	
	
	
# -----------------------------------------------------
# Run one test as a single user
#[root@ansibler]

    usercount=1

    endpoint="http://localhost:8080"
    testconfig=/deployments/zeppelin/test/config/quick.json
    testusers=/tmp/test-users.json

    delaystart=4
    delaynotebook=5

    /tmp/run-benchmark.py \
        "${endpoint:?}" \
        "${testconfig:?}" \
        "${testusers:?}" \
        "${usercount:?}" \
        "${delaystart:?}" \
        "${delaynotebook:?}" 
   

[
	[{
		"name": "GaiaDMPSetup",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "48.58",
			"expected": "45.00",
			"percent": "7.95",
			"start": "2022-11-02T16:39:06.630350",
			"finish": "2022-11-02T16:39:55.207399"
		},
		"logs": ""
	}, {
		"name": "Mean_proper_motions_over_the_sky",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "81.61",
			"expected": "55.00",
			"percent": "48.38",
			"start": "2022-11-02T16:40:00.212821",
			"finish": "2022-11-02T16:41:21.822191"
		},
		"logs": ""
	}, {
		"name": "Source_counts_over_the_sky.json",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "38.05",
			"expected": "22.00",
			"percent": "72.95",
			"start": "2022-11-02T16:41:26.823978",
			"finish": "2022-11-02T16:42:04.873713"
		},
		"logs": ""
	}, {
		"name": "Library_Validation.json",
		"result": "ERROR",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "FAST",
			"elapsed": "9.18",
			"expected": "60.00",
			"percent": "-84.70",
			"start": "2022-11-02T16:42:09.877842",
			"finish": "2022-11-02T16:42:19.055397"
		},
		"logs": "Fail to execute line 6: import hdbscan\nTraceback (most recent call last):\n  File \"/tmp/1667407185147-0/zeppelin_python.py\", line 158, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 6, in <module>\n  File \"/usr/local/lib64/python3.7/site-packages/hdbscan/__init__.py\", line 1, in <module>\n    from .hdbscan_ import HDBSCAN, hdbscan\n  File \"/usr/local/lib64/python3.7/site-packages/hdbscan/hdbscan_.py\", line 334, in <module>\n    algorithm='best', memory=Memory(cachedir=None, verbose=0),\nTypeError: __init__() got an unexpected keyword argument 'cachedir'"
	}]
]	
